// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

//const { characterScript } = require("./helpers");

function flatten(array) {
  let test = array.reduce(function(acc, cur){
   let tony = acc.concat(cur)
   return tony
  }, [])
  return test
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, func, update, body) {
  
    if(func(value)){
      body(value)
    } else {
      return
    }
 
    return loop(update(value), func, update, body)
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, func) {

  for (let index = 0; index < array.length; index++){
    if (func(array[index]) === false){
      return false
    }
  }
  return true
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(text) {

    let ltr =[]
    let rtl =[]

    for (let index = 0; index < text.length; index++){
      let script = characterScript(text.charCodeAt(index))
    

    if (script !== null){
      script.direction === 'ltr' ? ltr.push(script) : rtl.push(script)
    }
  }

    if (ltr.length > rtl.length){
      return 'ltr'
    } else {
      return 'rtl'
    }

}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
